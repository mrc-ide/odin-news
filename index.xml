<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Wodin News</title><link>http://mrc-ide.github.io/odin-news/</link><description>Recent content on Wodin News</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Thu, 03 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://mrc-ide.github.io/odin-news/index.xml" rel="self" type="application/rss+xml"/><item><title>New distributions available to odin/dust models</title><link>http://mrc-ide.github.io/odin-news/posts/new-distributions/</link><pubDate>Thu, 03 Nov 2022 00:00:00 +0000</pubDate><guid>http://mrc-ide.github.io/odin-news/posts/new-distributions/</guid><description>odin.dust can now use rnbinom() (negative binomial distribution) and rgamma() (gamma distribution) within odin code in discrete time stochastic models, as of odin.dust 0.2.24 and dust 0.11.35</description></item><item><title>New JavaScript Support</title><link>http://mrc-ide.github.io/odin-news/posts/new-js-support/</link><pubDate>Mon, 24 Oct 2022 00:00:00 +0000</pubDate><guid>http://mrc-ide.github.io/odin-news/posts/new-js-support/</guid><description>We have overhauled (entirely) the JavaScript support in odin, replacing an earlier attempt at this. The new approach uses our new TypeScript packages for working with ODE (odin-js) and discrete-time (dust-js) models, and power our new web interface to odin (see the wodin blog for more information on this).
Over the coming months, we plan to port some of the core sequential Monte Carlo algorithms (particle filtering and particle MCMC) to dust-js and enable use of these models on the web.</description></item><item><title>About</title><link>http://mrc-ide.github.io/odin-news/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://mrc-ide.github.io/odin-news/about/</guid><description>This news site covers the researcher-facing part of the odin stack, covering:
odin, our DSL for dynamical models dust, a high-performance parallel simulation engine mode, a parallel ODE engine, soon to be merged into dust odin.dust, transpilation support for odin models to dust and mode mcstate, statistical support for dust and mode models, implementing particle filtering, particle MCMC, and other algorithms. This stack was built by us at RESIDE to support research activities within the MRC Centre for Global Infectious Disease Analysis.</description></item></channel></rss>